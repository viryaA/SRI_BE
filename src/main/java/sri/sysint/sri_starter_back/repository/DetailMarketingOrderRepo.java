package sri.sysint.sri_starter_back.repository;

import java.math.BigDecimal;
import sri.sysint.sri_starter_back.model.DetailMarketingOrder;
import sri.sysint.sri_starter_back.model.view.ViewDetailMarketingOrder;

import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

public interface DetailMarketingOrderRepo extends JpaRepository<DetailMarketingOrder, BigDecimal>{
	
	@Query(value = "SELECT * FROM SRI_IMPP_D_MARKETINGORDER WHERE HEADER_ID = :id", nativeQuery = true)
	
    Optional<DetailMarketingOrder> findById(@Param("id") BigDecimal id);
	
	@Query(value = "SELECT \r\n"
			+ "    t.CATEGORY,\r\n"
			+ "    p.PART_NUMBER,\r\n"
			+ "    p.DESCRIPTION,\r\n"
			+ "    i.MACHINE_TYPE,\r\n"
			+ "    ROUND(i.KAPA_PER_MOULD * 99.5 / 100, 0) AS KAPA_PER_MOULD,\r\n"
			+ "    i.NUMBER_OF_MOULD,\r\n"
			+ "    p.QTY_PER_RAK,\r\n"
			+ "    CEIL(p.UPPER_CONSTANT / p.QTY_PER_RAK) * p.QTY_PER_RAK AS MIN_ORDER,\r\n"
			+ "    CASE \r\n"
			+ "        WHEN p.QTY_PER_RAK = 0 THEN 0 \r\n"
			+ "        ELSE FLOOR(\r\n"
			+ "            (ROUND(i.KAPA_PER_MOULD * 99.5 / 100, 0) * i.NUMBER_OF_MOULD * 0.9 * \r\n"
			+ "            (CASE \r\n"
			+ "                WHEN t.PRODUCT_TYPE = 'TT' THEN TO_NUMBER(:totalHKTT1)\r\n"
			+ "                WHEN t.PRODUCT_TYPE = 'TL' THEN TO_NUMBER(:totalHKTL1)\r\n"
			+ "                ELSE 1 -- Nilai default jika tidak TT atau TL\r\n"
			+ "            END)) / p.QTY_PER_RAK\r\n"
			+ "        ) * p.QTY_PER_RAK \r\n"
			+ "    END AS KAPASITAS_MAKSIMUM_1,\r\n"
			+ "    CASE \r\n"
			+ "        WHEN p.QTY_PER_RAK = 0 THEN 0 \r\n"
			+ "        ELSE FLOOR(\r\n"
			+ "            (ROUND(i.KAPA_PER_MOULD * 99.5 / 100, 0) * i.NUMBER_OF_MOULD * 0.9 * \r\n"
			+ "            (CASE \r\n"
			+ "                WHEN t.PRODUCT_TYPE = 'TT' THEN TO_NUMBER(:totalHKTT2)\r\n"
			+ "                WHEN t.PRODUCT_TYPE = 'TL' THEN TO_NUMBER(:totalHKTL2)\r\n"
			+ "                ELSE 1 -- Nilai default jika tidak TT atau TL\r\n"
			+ "            END)) / p.QTY_PER_RAK\r\n"
			+ "        ) * p.QTY_PER_RAK \r\n"
			+ "    END AS KAPASITAS_MAKSIMUM_2,\r\n"
			+ "    CASE \r\n"
			+ "        WHEN p.QTY_PER_RAK = 0 THEN 0 \r\n"
			+ "        ELSE FLOOR(\r\n"
			+ "            (ROUND(i.KAPA_PER_MOULD * 99.5 / 100, 0) * i.NUMBER_OF_MOULD * 0.9 * \r\n"
			+ "            (CASE \r\n"
			+ "                WHEN t.PRODUCT_TYPE = 'TT' THEN TO_NUMBER(:totalHKTT3)\r\n"
			+ "                WHEN t.PRODUCT_TYPE = 'TL' THEN TO_NUMBER(:totalHKTL3)\r\n"
			+ "                ELSE 1 -- Nilai default jika tidak TT atau TL\r\n"
			+ "            END)) / p.QTY_PER_RAK\r\n"
			+ "        ) * p.QTY_PER_RAK \r\n"
			+ "    END AS KAPASITAS_MAKSIMUM_3\r\n"
			+ "FROM \r\n"
			+ "    SRI_IMPP_M_PRODUCT p\r\n"
			+ "JOIN \r\n"
			+ "    SRI_IMPP_M_ITEMCURING i \r\n"
			+ "ON \r\n"
			+ "    p.ITEM_CURING = i.ITEM_CURING\r\n"
			+ "JOIN \r\n"
			+ "    SRI_IMPP_M_PRODUCTTYPE t\r\n"
			+ "ON \r\n"
			+ "    p.PRODUCT_TYPE_ID = t.PRODUCT_TYPE_ID\r\n"
			+ "WHERE\r\n"
			+ "    t.PRODUCT_MERK = :productMerk AND\r\n"
			+ "    p.STATUS = 1", nativeQuery = true)

	List<Map<String, Object>> getDataTable(
	        @Param("totalHKTT1") BigDecimal totalHKTT1,
	        @Param("totalHKTT2") BigDecimal totalHKTT2,
	        @Param("totalHKTT3") BigDecimal totalHKTT3, 
	        @Param("totalHKTL1") BigDecimal totalHKTL1, 
	        @Param("totalHKTL2") BigDecimal totalHKTL2, 
	        @Param("totalHKTL3") BigDecimal totalHKTL3, 
	        @Param("productMerk") String productMerk);

	
	@Query(value = "SELECT COUNT(*) FROM SRI_IMPP_D_MARKETINGORDER", nativeQuery = true)
    BigDecimal getNewId();
	
	@Query(value = "SELECT * FROM SRI_IMPP_D_MARKETINGORDER WHERE MO_ID = :moId", nativeQuery = true)
	List<DetailMarketingOrder> findByMoId(@Param("moId") String moId);

	   
	@Query(value = "SELECT t.CATEGORY, p.DESCRIPTION, i.MACHINE_TYPE " +
	        "FROM SRI_IMPP_M_PRODUCT p " +
	        "JOIN SRI_IMPP_M_ITEMCURING i ON p.ITEM_CURING = i.ITEM_CURING " +
	        "JOIN SRI_IMPP_M_PRODUCTTYPE t ON p.PRODUCT_TYPE_ID = t.PRODUCT_TYPE_ID " +
	        "WHERE p.PART_NUMBER = :partNumber", nativeQuery = true)
	Map<String, Object> findProductDetails(@Param("partNumber") BigDecimal partNumber);

	@Query(value = "SELECT " + 
	        "MO.DETAIL_ID, " + 
	        "MO.MO_ID, " + 
	        "MO.CATEGORY, " + 
	        "MO.PART_NUMBER, " +
	        "MO.DESCRIPTION, " +
	        "MO.MACHINE_TYPE, " +
	        "MO.CAPACITY, " +
	        "MO.QTY_PER_MOULD, " + 
	        "MO.QTY_PER_RAK, " +
	        "MO.MIN_ORDER, " +
	        "MO.MAX_CAP_MONTH_0, " + 
	        "MO.INITIAL_STOCK, " +
	        "MO.MO_MONTH_0, " +
	        "MO.PPD, " +
	        "MO.CAV, " +
	        "P.ITEM_CURING, " + 
	        "P.PATTERN_ID, " +
	        "P.SIZE_ID, " +
	        "P.RIM, " +
	        "P.WIB_TUBE, " + 
	        "P.ITEM_ASSY, " +
	        "P.ITEM_EXT, " + 
	        "P.EXT_DESCRIPTION, " + 
	        "P.UPPER_CONSTANT, " +
	        "P.LOWER_CONSTANT, " +
	        "PT.PRODUCT_TYPE " + 
	    "FROM " +
	        "SRI_IMPP_D_MARKETINGORDER MO " +
	    "JOIN " +
	        "SRI_IMPP_M_PRODUCT P " + 
	    "ON " +
	        "MO.PART_NUMBER = P.PART_NUMBER " +
	    "JOIN " +
	        "SRI_IMPP_M_PRODUCTTYPE PT " + 
	    "ON " +
	        "P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID " +
	    "WHERE " +
	        "MO.MO_ID = :moId OR MO.MO_ID = :moId2 " +
	    "ORDER BY " +
	        "MAX(MO.PPD) OVER (PARTITION BY P.ITEM_ASSY) DESC, " +
	        "MO.PPD DESC", nativeQuery = true)
	List<Map<String, Object>> findByMoIdSortPpdDesc(@Param("moId") String moId, @Param("moId2") String moId2);
	
	@Query(value = "SELECT \r\n"
			+ "    MO.DETAIL_ID, \r\n"
			+ "    MO.MO_ID, \r\n"
			+ "    MO.CATEGORY, \r\n"
			+ "    MO.PART_NUMBER,\r\n"
			+ "    MO.DESCRIPTION,\r\n"
			+ "    MO.MACHINE_TYPE,\r\n"
			+ "    MO.CAPACITY,\r\n"
			+ "    MO.QTY_PER_MOULD, \r\n"
			+ "    MO.QTY_PER_RAK,\r\n"
			+ "    MO.MIN_ORDER,\r\n"
			+ "    MO.MAX_CAP_MONTH_0, \r\n"
			+ "    MO.INITIAL_STOCK,\r\n"
			+ "    MO.MO_MONTH_0,\r\n"
			+ "    MO.PPD,\r\n"
			+ "    MO.CAV,\r\n"
			+ "    P.ITEM_CURING, \r\n"
			+ "    P.PATTERN_ID,\r\n"
			+ "    P.SIZE_ID,\r\n"
			+ "    P.RIM,\r\n"
			+ "    P.WIB_TUBE, \r\n"
			+ "    P.ITEM_ASSY,\r\n"
			+ "    P.ITEM_EXT, \r\n"
			+ "    P.EXT_DESCRIPTION, \r\n"
			+ "    P.UPPER_CONSTANT,\r\n"
			+ "    P.LOWER_CONSTANT,\r\n"
			+ "    PT.PRODUCT_TYPE,\r\n"
			+ "    PT.CATEGORY AS PRODUCT_CATEGORY\r\n"
			+ "FROM \r\n"
			+ "    SRI_IMPP_D_MARKETINGORDER MO \r\n"
			+ "JOIN \r\n"
			+ "    SRI_IMPP_M_PRODUCT P \r\n"
			+ "ON \r\n"
			+ "    MO.PART_NUMBER = P.PART_NUMBER \r\n"
			+ "JOIN \r\n"
			+ "    SRI_IMPP_M_PRODUCTTYPE PT \r\n"
			+ "ON \r\n"
			+ "    P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID \r\n"
			+ "WHERE \r\n"
			+ "    MO.MO_ID = :moId OR MO.MO_ID = :moId2 \r\n"
			+ "ORDER BY \r\n"
			+ "    CASE \r\n"
			+ "        WHEN PT.CATEGORY LIKE '%TL%' THEN 1\r\n"
			+ "        WHEN PT.CATEGORY LIKE '%TT%' THEN 2 \r\n"
			+ "        ELSE 3 \r\n"
			+ "    END, \r\n"
			+ "    MO.MO_MONTH_0 DESC", nativeQuery = true)
	
		List<Map<String, Object>> findByMoIdSortProductType(@Param("moId") String moId, @Param("moId2") String moId2);
	
	@Query(value = "SELECT DISTINCT "
			+ "    MO.DETAIL_ID, "
			+ "    MO.MO_ID, "
			+ "    MO.CATEGORY, "
			+ "    MO.PART_NUMBER, "
			+ "    MO.DESCRIPTION, "
			+ "    MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, "
			+ "    MO.QTY_PER_MOULD, "
			+ "    MO.QTY_PER_RAK, "
			+ "    MO.MIN_ORDER, "
			+ "    MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, "
			+ "    MO.MO_MONTH_0, "
			+ "    MO.PPD, "
			+ "    MO.CAV, "
			+ "    P.ITEM_CURING, "
			+ "    P.PATTERN_ID, "
			+ "    P.SIZE_ID, "
			+ "    P.RIM, "
			+ "    P.WIB_TUBE, "
			+ "    P.ITEM_ASSY, "
			+ "    P.ITEM_EXT, "
			+ "    P.EXT_DESCRIPTION, "
			+ "    P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, "
			+ "    PT.PRODUCT_TYPE, "
			+ "    PT.CATEGORY AS PRODUCT_CATEGORY, "
			+ "    COUNT_CT.COUNT_ITEM_CURING "
			+ "FROM "
			+ "    SRI_IMPP_D_MARKETINGORDER MO "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCT P ON MO.PART_NUMBER = P.PART_NUMBER "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCTTYPE PT ON P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID "
			+ "LEFT JOIN "
			+ "    ( "
			+ "        SELECT WIP, COUNT(*) AS COUNT_ITEM_CURING "
			+ "        FROM SRI_IMPP_M_CT_CURING "
			+ "        GROUP BY WIP "
			+ "    ) COUNT_CT ON P.ITEM_CURING = COUNT_CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_CT_CURING CT ON P.ITEM_CURING = CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_MACHINE_CURING MC ON CT.OPERATION_SHORT_TEXT = MC.WORK_CENTER_TEXT "
			+ "WHERE "
			+ "    MC.MACHINE_TYPE = 'BOM' "
			+ "    AND NOT EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE != 'BOM' "
			+ "    ) "
			+ "    AND (MO.MO_ID = :moId OR MO.MO_ID = :moId2) "
			+ "GROUP BY "
			+ "    MO.DETAIL_ID, MO.MO_ID, MO.CATEGORY, MO.PART_NUMBER, MO.DESCRIPTION, MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, MO.QTY_PER_MOULD, MO.QTY_PER_RAK, MO.MIN_ORDER, MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, MO.MO_MONTH_0, MO.PPD, MO.CAV, P.ITEM_CURING, P.PATTERN_ID, P.SIZE_ID, "
			+ "    P.RIM, P.WIB_TUBE, P.ITEM_ASSY, P.ITEM_EXT, P.EXT_DESCRIPTION, P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, PT.PRODUCT_TYPE, PT.CATEGORY, COUNT_CT.COUNT_ITEM_CURING "
			+ "ORDER BY "
			+ "    COUNT_CT.COUNT_ITEM_CURING ASC, "
			+ "    CASE "
			+ "        WHEN PT.CATEGORY LIKE '%TL%' THEN 1 "
			+ "        WHEN PT.CATEGORY LIKE '%TT%' THEN 2 "
			+ "        ELSE 3 "
			+ "    END, "
			+ "    MO.MO_MONTH_0 DESC", nativeQuery = true)
	
		List<Map<String, Object>> findByMoIdSortProductTypeBom(@Param("moId") String moId, @Param("moId2") String moId2);


	@Query(value = "SELECT DISTINCT "
			+ "    MO.DETAIL_ID, "
			+ "    MO.MO_ID, "
			+ "    MO.CATEGORY, "
			+ "    MO.PART_NUMBER, "
			+ "    MO.DESCRIPTION, "
			+ "    MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, "
			+ "    MO.QTY_PER_MOULD, "
			+ "    MO.QTY_PER_RAK, "
			+ "    MO.MIN_ORDER, "
			+ "    MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, "
			+ "    MO.MO_MONTH_0, "
			+ "    MO.PPD, "
			+ "    MO.CAV, "
			+ "    P.ITEM_CURING, "
			+ "    P.PATTERN_ID, "
			+ "    P.SIZE_ID, "
			+ "    P.RIM, "
			+ "    P.WIB_TUBE, "
			+ "    P.ITEM_ASSY, "
			+ "    P.ITEM_EXT, "
			+ "    P.EXT_DESCRIPTION, "
			+ "    P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, "
			+ "    PT.PRODUCT_TYPE, "
			+ "    PT.CATEGORY AS PRODUCT_CATEGORY, "
			+ "    COUNT_CT.COUNT_ITEM_CURING "
			+ "FROM "
			+ "    SRI_IMPP_D_MARKETINGORDER MO "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCT P ON MO.PART_NUMBER = P.PART_NUMBER "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCTTYPE PT ON P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID "
			+ "LEFT JOIN "
			+ "    ( "
			+ "        SELECT WIP, COUNT(*) AS COUNT_ITEM_CURING "
			+ "        FROM SRI_IMPP_M_CT_CURING "
			+ "        GROUP BY WIP "
			+ "    ) COUNT_CT ON P.ITEM_CURING = COUNT_CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_CT_CURING CT ON P.ITEM_CURING = CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_MACHINE_CURING MC ON CT.OPERATION_SHORT_TEXT = MC.WORK_CENTER_TEXT "
			+ "WHERE "
			+ "    MC.MACHINE_TYPE = 'AB' "
			+ "    AND NOT EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE != 'AB' "
			+ "    ) "
			+ "    AND (MO.MO_ID = :moId OR MO.MO_ID = :moId2) "
			+ "GROUP BY "
			+ "    MO.DETAIL_ID, MO.MO_ID, MO.CATEGORY, MO.PART_NUMBER, MO.DESCRIPTION, MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, MO.QTY_PER_MOULD, MO.QTY_PER_RAK, MO.MIN_ORDER, MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, MO.MO_MONTH_0, MO.PPD, MO.CAV, P.ITEM_CURING, P.PATTERN_ID, P.SIZE_ID, "
			+ "    P.RIM, P.WIB_TUBE, P.ITEM_ASSY, P.ITEM_EXT, P.EXT_DESCRIPTION, P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, PT.PRODUCT_TYPE, PT.CATEGORY, COUNT_CT.COUNT_ITEM_CURING "
			+ "ORDER BY "
			+ "    COUNT_CT.COUNT_ITEM_CURING ASC, "
			+ "    CASE "
			+ "        WHEN PT.CATEGORY LIKE '%TL%' THEN 1 "
			+ "        WHEN PT.CATEGORY LIKE '%TT%' THEN 2 "
			+ "        ELSE 3 "
			+ "    END, "
			+ "    MO.MO_MONTH_0 DESC", nativeQuery = true)
	
		List<Map<String, Object>> findByMoIdSortProductTypeAb(@Param("moId") String moId, @Param("moId2") String moId2);
	
	@Query(value = "SELECT DISTINCT "
			+ "    MO.DETAIL_ID, "
			+ "    MO.MO_ID, "
			+ "    MO.CATEGORY, "
			+ "    MO.PART_NUMBER, "
			+ "    MO.DESCRIPTION, "
			+ "    MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, "
			+ "    MO.QTY_PER_MOULD, "
			+ "    MO.QTY_PER_RAK, "
			+ "    MO.MIN_ORDER, "
			+ "    MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, "
			+ "    MO.MO_MONTH_0, "
			+ "    MO.PPD, "
			+ "    MO.CAV, "
			+ "    P.ITEM_CURING, "
			+ "    P.PATTERN_ID, "
			+ "    P.SIZE_ID, "
			+ "    P.RIM, "
			+ "    P.WIB_TUBE, "
			+ "    P.ITEM_ASSY, "
			+ "    P.ITEM_EXT, "
			+ "    P.EXT_DESCRIPTION, "
			+ "    P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, "
			+ "    PT.PRODUCT_TYPE, "
			+ "    PT.CATEGORY AS PRODUCT_CATEGORY, "
			+ "    COUNT_CT.COUNT_ITEM_CURING "
			+ "FROM "
			+ "    SRI_IMPP_D_MARKETINGORDER MO "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCT P ON MO.PART_NUMBER = P.PART_NUMBER "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCTTYPE PT ON P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID "
			+ "LEFT JOIN "
			+ "    ( "
			+ "        SELECT WIP, COUNT(*) AS COUNT_ITEM_CURING "
			+ "        FROM SRI_IMPP_M_CT_CURING "
			+ "        GROUP BY WIP "
			+ "    ) COUNT_CT ON P.ITEM_CURING = COUNT_CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_CT_CURING CT ON P.ITEM_CURING = CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_MACHINE_CURING MC ON CT.OPERATION_SHORT_TEXT = MC.WORK_CENTER_TEXT "
			+ "WHERE "
			+ "    EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE = 'AB' "
			+ "    ) "
			+ "    AND EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE = 'BOM' "
			+ "    ) "
			+ "    AND (MO.MO_ID = :moId OR MO.MO_ID = :moId2) "
			+ "GROUP BY "
			+ "    MO.DETAIL_ID, MO.MO_ID, MO.CATEGORY, MO.PART_NUMBER, MO.DESCRIPTION, MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, MO.QTY_PER_MOULD, MO.QTY_PER_RAK, MO.MIN_ORDER, MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, MO.MO_MONTH_0, MO.PPD, MO.CAV, P.ITEM_CURING, P.PATTERN_ID, P.SIZE_ID, "
			+ "    P.RIM, P.WIB_TUBE, P.ITEM_ASSY, P.ITEM_EXT, P.EXT_DESCRIPTION, P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, PT.PRODUCT_TYPE, PT.CATEGORY, COUNT_CT.COUNT_ITEM_CURING "
			+ "ORDER BY "
			+ "    COUNT_CT.COUNT_ITEM_CURING ASC, "
			+ "    CASE "
			+ "        WHEN PT.CATEGORY LIKE '%TL%' THEN 1 "
			+ "        WHEN PT.CATEGORY LIKE '%TT%' THEN 2 "
			+ "        ELSE 3 "
			+ "    END, "
			+ "    MO.MO_MONTH_0 DESC", nativeQuery = true)
	
		List<Map<String, Object>> findByMoIdSortProductTypeBomAb(@Param("moId") String moId, @Param("moId2") String moId2);

	@Query(value = "SELECT DISTINCT "
			+ "    MO.DETAIL_ID, "
			+ "    MO.MO_ID, "
			+ "    MO.CATEGORY, "
			+ "    MO.PART_NUMBER, "
			+ "    MO.DESCRIPTION, "
			+ "    MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, "
			+ "    MO.QTY_PER_MOULD, "
			+ "    MO.QTY_PER_RAK, "
			+ "    MO.MIN_ORDER, "
			+ "    MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, "
			+ "    MO.MO_MONTH_0, "
			+ "    MO.PPD, "
			+ "    MO.CAV, "
			+ "    P.ITEM_CURING, "
			+ "    P.PATTERN_ID, "
			+ "    P.SIZE_ID, "
			+ "    P.RIM, "
			+ "    P.WIB_TUBE, "
			+ "    P.ITEM_ASSY, "
			+ "    P.ITEM_EXT, "
			+ "    P.EXT_DESCRIPTION, "
			+ "    P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, "
			+ "    PT.PRODUCT_TYPE, "
			+ "    PT.CATEGORY AS PRODUCT_CATEGORY, "
			+ "    COUNT_CT.COUNT_ITEM_CURING "
			+ "FROM "
			+ "    SRI_IMPP_D_MARKETINGORDER MO "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCT P ON MO.PART_NUMBER = P.PART_NUMBER "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCTTYPE PT ON P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID "
			+ "LEFT JOIN "
			+ "    ( "
			+ "        SELECT WIP, COUNT(*) AS COUNT_ITEM_CURING "
			+ "        FROM SRI_IMPP_M_CT_CURING "
			+ "        GROUP BY WIP "
			+ "    ) COUNT_CT ON P.ITEM_CURING = COUNT_CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_CT_CURING CT ON P.ITEM_CURING = CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_MACHINE_CURING MC ON CT.OPERATION_SHORT_TEXT = MC.WORK_CENTER_TEXT "
			+ "WHERE "
			+ "    MC.MACHINE_TYPE = 'BOM' "
			+ "    AND NOT EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE != 'BOM' "
			+ "    ) "
			+ "    AND (MO.MO_ID = :moId OR MO.MO_ID = :moId2) "
			+ "    AND NOT EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_FRONT_REAR FR "
			+ "        WHERE FR.DETAIL_ID_MO = MO.DETAIL_ID "
			+ "    ) "
			+ "GROUP BY "
			+ "    MO.DETAIL_ID, MO.MO_ID, MO.CATEGORY, MO.PART_NUMBER, MO.DESCRIPTION, MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, MO.QTY_PER_MOULD, MO.QTY_PER_RAK, MO.MIN_ORDER, MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, MO.MO_MONTH_0, MO.PPD, MO.CAV, P.ITEM_CURING, P.PATTERN_ID, P.SIZE_ID, "
			+ "    P.RIM, P.WIB_TUBE, P.ITEM_ASSY, P.ITEM_EXT, P.EXT_DESCRIPTION, P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, PT.PRODUCT_TYPE, PT.CATEGORY, COUNT_CT.COUNT_ITEM_CURING "
			+ "ORDER BY "
			+ "    COUNT_CT.COUNT_ITEM_CURING ASC, "
			+ "    CASE "
			+ "        WHEN PT.CATEGORY LIKE '%TL%' THEN 1 "
			+ "        WHEN PT.CATEGORY LIKE '%TT%' THEN 2 "
			+ "        ELSE 3 "
			+ "    END, "
			+ "    MO.MO_MONTH_0 DESC", nativeQuery = true)
	
		List<Map<String, Object>> findByMoIdSortProductTypeBomNotFrontRear(@Param("moId") String moId, @Param("moId2") String moId2);


	@Query(value = "SELECT DISTINCT "
			+ "    MO.DETAIL_ID, "
			+ "    MO.MO_ID, "
			+ "    MO.CATEGORY, "
			+ "    MO.PART_NUMBER, "
			+ "    MO.DESCRIPTION, "
			+ "    MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, "
			+ "    MO.QTY_PER_MOULD, "
			+ "    MO.QTY_PER_RAK, "
			+ "    MO.MIN_ORDER, "
			+ "    MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, "
			+ "    MO.MO_MONTH_0, "
			+ "    MO.PPD, "
			+ "    MO.CAV, "
			+ "    P.ITEM_CURING, "
			+ "    P.PATTERN_ID, "
			+ "    P.SIZE_ID, "
			+ "    P.RIM, "
			+ "    P.WIB_TUBE, "
			+ "    P.ITEM_ASSY, "
			+ "    P.ITEM_EXT, "
			+ "    P.EXT_DESCRIPTION, "
			+ "    P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, "
			+ "    PT.PRODUCT_TYPE, "
			+ "    PT.CATEGORY AS PRODUCT_CATEGORY, "
			+ "    COUNT_CT.COUNT_ITEM_CURING "
			+ "FROM "
			+ "    SRI_IMPP_D_MARKETINGORDER MO "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCT P ON MO.PART_NUMBER = P.PART_NUMBER "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCTTYPE PT ON P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID "
			+ "LEFT JOIN "
			+ "    ( "
			+ "        SELECT WIP, COUNT(*) AS COUNT_ITEM_CURING "
			+ "        FROM SRI_IMPP_M_CT_CURING "
			+ "        GROUP BY WIP "
			+ "    ) COUNT_CT ON P.ITEM_CURING = COUNT_CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_CT_CURING CT ON P.ITEM_CURING = CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_MACHINE_CURING MC ON CT.OPERATION_SHORT_TEXT = MC.WORK_CENTER_TEXT "
			+ "WHERE "
			+ "    MC.MACHINE_TYPE = 'AB' "
			+ "    AND NOT EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE != 'AB' "
			+ "    ) "
			+ "    AND (MO.MO_ID = :moId OR MO.MO_ID = :moId2) "
			+ "    AND NOT EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_FRONT_REAR FR "
			+ "        WHERE FR.DETAIL_ID_MO = MO.DETAIL_ID "
			+ "    ) "
			+ "GROUP BY "
			+ "    MO.DETAIL_ID, MO.MO_ID, MO.CATEGORY, MO.PART_NUMBER, MO.DESCRIPTION, MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, MO.QTY_PER_MOULD, MO.QTY_PER_RAK, MO.MIN_ORDER, MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, MO.MO_MONTH_0, MO.PPD, MO.CAV, P.ITEM_CURING, P.PATTERN_ID, P.SIZE_ID, "
			+ "    P.RIM, P.WIB_TUBE, P.ITEM_ASSY, P.ITEM_EXT, P.EXT_DESCRIPTION, P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, PT.PRODUCT_TYPE, PT.CATEGORY, COUNT_CT.COUNT_ITEM_CURING "
			+ "ORDER BY "
			+ "    COUNT_CT.COUNT_ITEM_CURING ASC, "
			+ "    CASE "
			+ "        WHEN PT.CATEGORY LIKE '%TL%' THEN 1 "
			+ "        WHEN PT.CATEGORY LIKE '%TT%' THEN 2 "
			+ "        ELSE 3 "
			+ "    END, "
			+ "    MO.MO_MONTH_0 DESC", nativeQuery = true)
	
		List<Map<String, Object>> findByMoIdSortProductTypeAbNotFrontRear(@Param("moId") String moId, @Param("moId2") String moId2);
	
	@Query(value = "SELECT DISTINCT "
			+ "    MO.DETAIL_ID, "
			+ "    MO.MO_ID, "
			+ "    MO.CATEGORY, "
			+ "    MO.PART_NUMBER, "
			+ "    MO.DESCRIPTION, "
			+ "    MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, "
			+ "    MO.QTY_PER_MOULD, "
			+ "    MO.QTY_PER_RAK, "
			+ "    MO.MIN_ORDER, "
			+ "    MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, "
			+ "    MO.MO_MONTH_0, "
			+ "    MO.PPD, "
			+ "    MO.CAV, "
			+ "    P.ITEM_CURING, "
			+ "    P.PATTERN_ID, "
			+ "    P.SIZE_ID, "
			+ "    P.RIM, "
			+ "    P.WIB_TUBE, "
			+ "    P.ITEM_ASSY, "
			+ "    P.ITEM_EXT, "
			+ "    P.EXT_DESCRIPTION, "
			+ "    P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, "
			+ "    PT.PRODUCT_TYPE, "
			+ "    PT.CATEGORY AS PRODUCT_CATEGORY, "
			+ "    COUNT_CT.COUNT_ITEM_CURING "
			+ "FROM "
			+ "    SRI_IMPP_D_MARKETINGORDER MO "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCT P ON MO.PART_NUMBER = P.PART_NUMBER "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCTTYPE PT ON P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID "
			+ "LEFT JOIN "
			+ "    ( "
			+ "        SELECT WIP, COUNT(*) AS COUNT_ITEM_CURING "
			+ "        FROM SRI_IMPP_M_CT_CURING "
			+ "        GROUP BY WIP "
			+ "    ) COUNT_CT ON P.ITEM_CURING = COUNT_CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_CT_CURING CT ON P.ITEM_CURING = CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_MACHINE_CURING MC ON CT.OPERATION_SHORT_TEXT = MC.WORK_CENTER_TEXT "
			+ "WHERE "
			+ "    EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE = 'AB' "
			+ "    ) "
			+ "    AND EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE = 'BOM' "
			+ "    ) "
			+ "    AND (MO.MO_ID = :moId OR MO.MO_ID = :moId2) "
			+ "    AND NOT EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_FRONT_REAR FR "
			+ "        WHERE FR.DETAIL_ID_MO = MO.DETAIL_ID "
			+ "    ) "
			+ "GROUP BY "
			+ "    MO.DETAIL_ID, MO.MO_ID, MO.CATEGORY, MO.PART_NUMBER, MO.DESCRIPTION, MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, MO.QTY_PER_MOULD, MO.QTY_PER_RAK, MO.MIN_ORDER, MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, MO.MO_MONTH_0, MO.PPD, MO.CAV, P.ITEM_CURING, P.PATTERN_ID, P.SIZE_ID, "
			+ "    P.RIM, P.WIB_TUBE, P.ITEM_ASSY, P.ITEM_EXT, P.EXT_DESCRIPTION, P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, PT.PRODUCT_TYPE, PT.CATEGORY, COUNT_CT.COUNT_ITEM_CURING "
			+ "ORDER BY "
			+ "    COUNT_CT.COUNT_ITEM_CURING ASC, "
			+ "    CASE "
			+ "        WHEN PT.CATEGORY LIKE '%TL%' THEN 1 "
			+ "        WHEN PT.CATEGORY LIKE '%TT%' THEN 2 "
			+ "        ELSE 3 "
			+ "    END, "
			+ "    MO.MO_MONTH_0 DESC", nativeQuery = true)
	
		List<Map<String, Object>> findByMoIdSortProductTypeBomAbNotFrontRear(@Param("moId") String moId, @Param("moId2") String moId2);

	@Query(value = "SELECT DISTINCT "
			+ "    MO.DETAIL_ID, "
			+ "    MO.MO_ID, "
			+ "    MO.CATEGORY, "
			+ "    MO.PART_NUMBER, "
			+ "    MO.DESCRIPTION, "
			+ "    MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, "
			+ "    MO.QTY_PER_MOULD, "
			+ "    MO.QTY_PER_RAK, "
			+ "    MO.MIN_ORDER, "
			+ "    MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, "
			+ "    MO.MO_MONTH_0, "
			+ "    MO.PPD, "
			+ "    MO.CAV, "
			+ "    P.ITEM_CURING, "
			+ "    P.PATTERN_ID, "
			+ "    P.SIZE_ID, "
			+ "    P.RIM, "
			+ "    P.WIB_TUBE, "
			+ "    P.ITEM_ASSY, "
			+ "    P.ITEM_EXT, "
			+ "    P.EXT_DESCRIPTION, "
			+ "    P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, "
			+ "    PT.PRODUCT_TYPE, "
			+ "    PT.CATEGORY AS PRODUCT_CATEGORY, "
			+ "    COUNT_CT.COUNT_ITEM_CURING "
			+ "FROM "
			+ "    SRI_IMPP_D_MARKETINGORDER MO "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCT P ON MO.PART_NUMBER = P.PART_NUMBER "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCTTYPE PT ON P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID "
			+ "LEFT JOIN "
			+ "    ( "
			+ "        SELECT WIP, COUNT(*) AS COUNT_ITEM_CURING "
			+ "        FROM SRI_IMPP_M_CT_CURING "
			+ "        GROUP BY WIP "
			+ "    ) COUNT_CT ON P.ITEM_CURING = COUNT_CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_CT_CURING CT ON P.ITEM_CURING = CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_MACHINE_CURING MC ON CT.OPERATION_SHORT_TEXT = MC.WORK_CENTER_TEXT "
			+ "WHERE "
			+ "    MC.MACHINE_TYPE = 'AB' "
			+ "    AND NOT EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE != 'AB' "
			+ "    ) "
			+ "    AND (MO.MO_ID = :moId OR MO.MO_ID = :moId2) "
			+ "    AND EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_FRONT_REAR FR "
			+ "        WHERE FR.DETAIL_ID_MO = MO.DETAIL_ID "
			+ "    ) "
			+ "GROUP BY "
			+ "    MO.DETAIL_ID, MO.MO_ID, MO.CATEGORY, MO.PART_NUMBER, MO.DESCRIPTION, MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, MO.QTY_PER_MOULD, MO.QTY_PER_RAK, MO.MIN_ORDER, MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, MO.MO_MONTH_0, MO.PPD, MO.CAV, P.ITEM_CURING, P.PATTERN_ID, P.SIZE_ID, "
			+ "    P.RIM, P.WIB_TUBE, P.ITEM_ASSY, P.ITEM_EXT, P.EXT_DESCRIPTION, P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, PT.PRODUCT_TYPE, PT.CATEGORY, COUNT_CT.COUNT_ITEM_CURING "
			+ "ORDER BY "
			+ "    COUNT_CT.COUNT_ITEM_CURING ASC, "
			+ "    CASE "
			+ "        WHEN PT.CATEGORY LIKE '%TL%' THEN 1 "
			+ "        WHEN PT.CATEGORY LIKE '%TT%' THEN 2 "
			+ "        ELSE 3 "
			+ "    END, "
			+ "    MO.MO_MONTH_0 DESC", nativeQuery = true)
	
		List<Map<String, Object>> findByMoIdSortProductTypeAbFrontRear(@Param("moId") String moId, @Param("moId2") String moId2);
	
	@Query(value = "SELECT DISTINCT "
			+ "    MO.DETAIL_ID, "
			+ "    MO.MO_ID, "
			+ "    MO.CATEGORY, "
			+ "    MO.PART_NUMBER, "
			+ "    MO.DESCRIPTION, "
			+ "    MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, "
			+ "    MO.QTY_PER_MOULD, "
			+ "    MO.QTY_PER_RAK, "
			+ "    MO.MIN_ORDER, "
			+ "    MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, "
			+ "    MO.MO_MONTH_0, "
			+ "    MO.PPD, "
			+ "    MO.CAV, "
			+ "    P.ITEM_CURING, "
			+ "    P.PATTERN_ID, "
			+ "    P.SIZE_ID, "
			+ "    P.RIM, "
			+ "    P.WIB_TUBE, "
			+ "    P.ITEM_ASSY, "
			+ "    P.ITEM_EXT, "
			+ "    P.EXT_DESCRIPTION, "
			+ "    P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, "
			+ "    PT.PRODUCT_TYPE, "
			+ "    PT.CATEGORY AS PRODUCT_CATEGORY, "
			+ "    COUNT_CT.COUNT_ITEM_CURING "
			+ "FROM "
			+ "    SRI_IMPP_D_MARKETINGORDER MO "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCT P ON MO.PART_NUMBER = P.PART_NUMBER "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCTTYPE PT ON P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID "
			+ "LEFT JOIN "
			+ "    ( "
			+ "        SELECT WIP, COUNT(*) AS COUNT_ITEM_CURING "
			+ "        FROM SRI_IMPP_M_CT_CURING "
			+ "        GROUP BY WIP "
			+ "    ) COUNT_CT ON P.ITEM_CURING = COUNT_CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_CT_CURING CT ON P.ITEM_CURING = CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_MACHINE_CURING MC ON CT.OPERATION_SHORT_TEXT = MC.WORK_CENTER_TEXT "
			+ "WHERE "
			+ "    EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE = 'AB' "
			+ "    ) "
			+ "    AND EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE = 'BOM' "
			+ "    ) "
			+ "    AND (MO.MO_ID = :moId OR MO.MO_ID = :moId2) "
			+ "    AND EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_FRONT_REAR FR "
			+ "        WHERE FR.DETAIL_ID_MO = MO.DETAIL_ID "
			+ "    ) "
			+ "GROUP BY "
			+ "    MO.DETAIL_ID, MO.MO_ID, MO.CATEGORY, MO.PART_NUMBER, MO.DESCRIPTION, MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, MO.QTY_PER_MOULD, MO.QTY_PER_RAK, MO.MIN_ORDER, MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, MO.MO_MONTH_0, MO.PPD, MO.CAV, P.ITEM_CURING, P.PATTERN_ID, P.SIZE_ID, "
			+ "    P.RIM, P.WIB_TUBE, P.ITEM_ASSY, P.ITEM_EXT, P.EXT_DESCRIPTION, P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, PT.PRODUCT_TYPE, PT.CATEGORY, COUNT_CT.COUNT_ITEM_CURING "
			+ "ORDER BY "
			+ "    COUNT_CT.COUNT_ITEM_CURING ASC, "
			+ "    CASE "
			+ "        WHEN PT.CATEGORY LIKE '%TL%' THEN 1 "
			+ "        WHEN PT.CATEGORY LIKE '%TT%' THEN 2 "
			+ "        ELSE 3 "
			+ "    END, "
			+ "    MO.MO_MONTH_0 DESC", nativeQuery = true)
	
		List<Map<String, Object>> findByMoIdSortProductTypeBomAbFrontRear(@Param("moId") String moId, @Param("moId2") String moId2);
	
	@Query(value = "SELECT DISTINCT "
			+ "    MO.DETAIL_ID, "
			+ "    MO.MO_ID, "
			+ "    MO.CATEGORY, "
			+ "    MO.PART_NUMBER, "
			+ "    MO.DESCRIPTION, "
			+ "    MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, "
			+ "    MO.QTY_PER_MOULD, "
			+ "    MO.QTY_PER_RAK, "
			+ "    MO.MIN_ORDER, "
			+ "    MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, "
			+ "    MO.MO_MONTH_0, "
			+ "    MO.PPD, "
			+ "    MO.CAV, "
			+ "    P.ITEM_CURING, "
			+ "    P.PATTERN_ID, "
			+ "    P.SIZE_ID, "
			+ "    P.RIM, "
			+ "    P.WIB_TUBE, "
			+ "    P.ITEM_ASSY, "
			+ "    P.ITEM_EXT, "
			+ "    P.EXT_DESCRIPTION, "
			+ "    P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, "
			+ "    PT.PRODUCT_TYPE, "
			+ "    PT.CATEGORY AS PRODUCT_CATEGORY, "
			+ "    COUNT_CT.COUNT_ITEM_CURING "
			+ "FROM "
			+ "    SRI_IMPP_D_MARKETINGORDER MO "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCT P ON MO.PART_NUMBER = P.PART_NUMBER "
			+ "JOIN "
			+ "    SRI_IMPP_M_PRODUCTTYPE PT ON P.PRODUCT_TYPE_ID = PT.PRODUCT_TYPE_ID "
			+ "LEFT JOIN "
			+ "    ( "
			+ "        SELECT WIP, COUNT(*) AS COUNT_ITEM_CURING "
			+ "        FROM SRI_IMPP_M_CT_CURING "
			+ "        GROUP BY WIP "
			+ "    ) COUNT_CT ON P.ITEM_CURING = COUNT_CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_CT_CURING CT ON P.ITEM_CURING = CT.WIP "
			+ "JOIN "
			+ "    SRI_IMPP_M_MACHINE_CURING MC ON CT.OPERATION_SHORT_TEXT = MC.WORK_CENTER_TEXT "
			+ "WHERE "
			+ "    MC.MACHINE_TYPE = 'BOM' "
			+ "    AND NOT EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_CT_CURING CT2 "
			+ "        JOIN SRI_IMPP_M_MACHINE_CURING MC2 ON CT2.OPERATION_SHORT_TEXT = MC2.WORK_CENTER_TEXT "
			+ "        WHERE CT2.WIP = CT.WIP "
			+ "        AND MC2.MACHINE_TYPE != 'BOM' "
			+ "    ) "
			+ "    AND (MO.MO_ID = :moId OR MO.MO_ID = :moId2) "
			+ "    AND EXISTS ( "
			+ "        SELECT 1 "
			+ "        FROM SRI_IMPP_M_FRONT_REAR FR "
			+ "        WHERE FR.DETAIL_ID_MO = MO.DETAIL_ID "
			+ "    ) "
			+ "GROUP BY "
			+ "    MO.DETAIL_ID, MO.MO_ID, MO.CATEGORY, MO.PART_NUMBER, MO.DESCRIPTION, MO.MACHINE_TYPE, "
			+ "    MO.CAPACITY, MO.QTY_PER_MOULD, MO.QTY_PER_RAK, MO.MIN_ORDER, MO.MAX_CAP_MONTH_0, "
			+ "    MO.INITIAL_STOCK, MO.MO_MONTH_0, MO.PPD, MO.CAV, P.ITEM_CURING, P.PATTERN_ID, P.SIZE_ID, "
			+ "    P.RIM, P.WIB_TUBE, P.ITEM_ASSY, P.ITEM_EXT, P.EXT_DESCRIPTION, P.UPPER_CONSTANT, "
			+ "    P.LOWER_CONSTANT, PT.PRODUCT_TYPE, PT.CATEGORY, COUNT_CT.COUNT_ITEM_CURING "
			+ "ORDER BY "
			+ "    COUNT_CT.COUNT_ITEM_CURING ASC, "
			+ "    CASE "
			+ "        WHEN PT.CATEGORY LIKE '%TL%' THEN 1 "
			+ "        WHEN PT.CATEGORY LIKE '%TT%' THEN 2 "
			+ "        ELSE 3 "
			+ "    END, "
			+ "    MO.MO_MONTH_0 DESC", nativeQuery = true)
	
		List<Map<String, Object>> findByMoIdSortProductTypeBomFrontRear(@Param("moId") String moId, @Param("moId2") String moId2);
	
	
	//DetailMarketingOrderRepo
	@Query(value = "SELECT * FROM SRI_IMPP_D_MARKETINGORDER WHERE MO_ID = :moId1 OR MO_ID = :moId2", nativeQuery = true)
	List<DetailMarketingOrder> findByTwoMoId(@Param("moId1") String moId1, @Param("moId2") String moId2);
}